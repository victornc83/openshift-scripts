kind: Template
apiVersion: v1
metadata:
  name: java-template
  annotations:
    openshift.io/display-name: 'Java App'
    description: 'Java app generated by S2I'
    iconClass: 'icon-openjdk'
    tags: "instant-app,maven,java"
labels:
  template: java-template
message: 'Java Aplication will be created by this template from source code'
parameters:
- description: 'Name for the application'
  name: APPLICATION_NAME
  value: 'helloworld'
  required: true
- description: 'Git source URI for application'
  name: GIT_URI
  value: 'https://github.com/victornc83/sb-base.git'
  required: true
- description: 'Git branch/tag reference'
  name: GIT_REF
  value: 'master'
- description: 'Git directory. Leave blank for root folder'
  name: CONTEXT_DIR
  value: ""
- name: GIT_SECRET
  displayName: Secret to clone the code
  required: true
  description: Secret to clone the project from git repository through SSH
  value: ''
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the Rails container can use.
  value: 512Mi
- description: 'Github trigger secret'
  name: GITHUB_TRIGGER_SECRET
  from: '[a-zA-Z0-9]{8}'
  generate: expression
- description: 'Generic build trigger secret'
  name: GENERIC_TRIGGER_SECRET
  from: '[a-zA-Z0-9]{8}'
  generate: expression
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the Rails container can use.
  value: 512Mi

objects:

- kind: ImageStream
  apiVersion: v1
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec: {}
  status:
    dockerImageRepository: ""

- kind: BuildConfig
  apiVersion: v1
  metadata:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "${APPLICATION_NAME}", "namespace": "", "kind": "DeploymentConfig"}]'
  spec:
    source:
      type: Git
      git:
        uri: "${GIT_URI}"
        ref: "${GIT_REF}"
      contextDir: "${CONTEXT_DIR}"
      sourceSecret:
        name: ${GIT_SECRET}
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'openjdk18-openshift:latest'
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:latest"
    postCommit: {}
    resources: {}
    runPolicy: Serial
    triggers:
      - type: GitHub
        github:
          secret: "${GITHUB_TRIGGER_SECRET}"
      - type: Generic
        generic:
          secret: "${GENERIC_TRIGGER_SECRET}"
      - type: ImageChange
        imageChange: {}

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${APPLICATION_NAME}:latest
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          env: []
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          terminationMessagePath: /dev/termination-log
          livenessProbe:
            httpGet:
              path: /api/v1/ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/v1/ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 60
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
  status: {}

- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- kind: Route
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8080-tcp
    wildcardPolicy: None
